generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_V6_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_V6_URL_NON_POOLING") // 
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

model User {
  id         Int         @id @default(autoincrement())
  last       String
  first      String
  email      String      @unique
  picture    String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  activated  Boolean     @default(false)
  role       Role        @default(USER)
  credential Credential?
  stats      Stats?
}

model Credential {
  id                 Int      @id @default(autoincrement())
  accessToken        String
  scope              String
  tokenType          String
  expiry             BigInt   @default(0)
  refreshToken       String?
  createdAt          DateTime @default(now())
  refreshTokenExpiry BigInt   @default(0)
  userId             Int      @unique
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Stats {
  id          Int      @id @default(autoincrement())
  count       Int      @default(0)
  lastVisited DateTime @default(now())
  userId      Int      @unique
  user        User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  MODERATOR
  ADMIN
  SUPER
}
